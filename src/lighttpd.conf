###############################################################################
# Default lighttpd.conf for Gentoo.
# $Header: /var/cvsroot/gentoo-x86/www-servers/lighttpd/files/conf/lighttpd.conf,v 1.3 2005/09/01 14:22:35 ka0ttic Exp $
###############################################################################

# {{{ variables
var.basedir  = "/var/www/localhost"
var.logdir   = "/var/log/git"
var.statedir = "/var/lib/lighttpd"
# }}}

# {{{ modules
# At the very least, mod_access and mod_accesslog should be enabled.
# All other modules should only be loaded if necessary.
# NOTE: the order of modules is important.
server.modules = (
#    "mod_rewrite",
#    "mod_redirect",
    "mod_alias",
    "mod_access",
    "mod_auth",
    "mod_authn_file",
    "mod_cgi",
#    "mod_status",
    "mod_setenv",
#    "mod_proxy",
#    "mod_simple_vhost",
#    "mod_evhost",
#    "mod_userdir",
#    "mod_deflate",
#    "mod_ssi",
#    "mod_expire",
#    "mod_rrdtool",
#    "mod_webdav",
    "mod_accesslog"
)
# }}}

# {{{ server settings
server.username      = "git"
server.groupname     = "git"

server.document-root = var.basedir + "/htdocs"
server.pid-file      = "/run/lighttpd.pid"

server.errorlog      = var.logdir  + "/error.log"
# log errors to syslog instead
#   server.errorlog-use-syslog = "enable"

index-file.names     = ("index.php", "index.html", "index.htm", "default.htm")

# server.tag           = "lighttpd"

# event handler (defaults to OS-specific event framework)
# see performance.txt
# 
# for >= linux-2.6
#   server.event-handler = "linux-sysepoll"
# for FreeBSD
#   server.event-handler = "freebsd-kqueue"

# chroot to directory (defaults to no chroot)
# server.chroot      = "/"

# bind to port (defaults to 80)
server.port          = 9980

# bind to name (defaults to all interfaces)
# server.bind          = "grisu.home.kneschke.de"

# error-handler for status 404
# server.error-handler-404 = "/error-handler.html"
# server.error-handler-404 = "/error-handler.php"

# Format: <errorfile-prefix><status-code>.html
# -> ..../status-404.html for 'File not found'
# server.errorfile-prefix    = var.basedir + "/error/status-"

# support for caching stat() calls (default "simple")
# for Linux
#   server.stat-cache-engine = "inotify"
# for FreeBSD
#   server.stat-cache-engine = "kqueue"
# }}}

# {{{ mod_staticfile

# which extensions should not be handled via static-file transfer
# (extensions that are usually handled by mod_cgi, mod_fastcgi, etc).
static-file.exclude-extensions = (".php", ".pl", ".cgi", ".fcgi")
# }}}

# {{{ mod_accesslog
accesslog.filename   = var.logdir + "/access.log"
# }}}


# {{{ mod_access
# see access.txt
## for htdigest
url.access-deny = ("~", ".inc")
# }}}

$HTTP["url"] =~ "^/public" {
    alias.url = ( "/public" => "/usr/libexec/git-core/git-http-backend" )
    setenv.set-environment = ( "GIT_PROJECT_ROOT" => "/public" )
    setenv.set-environment += ( "GIT_HTTP_EXPORT_ALL" => "" )
    cgi.assign = ( "" => "" )
}

$HTTP["url"] =~ "^/private" {
    alias.url = ( "/private" => "/usr/libexec/git-core/git-http-backend" )
	auth.backend = "htdigest" 
    auth.backend.htdigest.userfile = "/etc/lighttpd-htdigest.user"
    auth.require = ( "" => ("method" => "basic", "realm" => "git", "require" => "valid-user") )
    setenv.set-environment = ( "GIT_PROJECT_ROOT" => "/private" )
    setenv.set-environment += ( "GIT_HTTP_EXPORT_ALL" => "" )
    cgi.assign = ( "" => "" )
}

$HTTP["querystring"] =~ "service=git-receive-pack" {
	auth.backend = "htdigest" 
    auth.backend.htdigest.userfile = "/etc/lighttpd-htdigest.user"
    auth.require = ( "" => ("method" => "basic", "realm" => "git", "require" => "valid-user") )
 
}
$HTTP["url"] =~ "^/.*/git-receive-pack$" {
    auth.backend = "htdigest" 
    auth.backend.htdigest.userfile = "/etc/lighttpd-htdigest.user"
    auth.require = ( "" => ("method" => "basic", "realm" => "git", "require" => "valid-user") )
}

# {{{ debug
 debug.log-request-header   = "enable"
 debug.log-response-header  = "enable"
 debug.log-request-handling = "enable"
 debug.log-file-not-found   = "enable"
# }}}



# vim: set ft=conf foldmethod=marker et :
